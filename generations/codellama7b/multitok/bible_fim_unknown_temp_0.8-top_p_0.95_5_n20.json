{"content": ["\n  'Genesis',\n  'Exodus',\n  'Leviticus',\n  'Numbers',\n  'Deuteronomy',\n  'Joshua',\n  'Judges',\n  '", " '1 Thessalonians',\n  '2 Thessalonians',\n  '1 Timothy',\n  '2 Timothy',\n  'Titus',\n  'Philemon',\n  'H", " 1,\n  '2 Peter': 3,\n  '1 John': 5,\n  '2 John': 1,\n  '3 John': 1,\n  Jude: 1,\n  Re", " const booksToChaptersMap: { [name: string]: number } = {\n  Genesis: 50,\n  Exodus: 40,\n  Leviticus: 27,\n  Num", " type BookTitle = string;\n\nconst booksToChaptersMap: { [name: string]: number } = {\n  Genesis: 50,\n  Exodus: 40,\n  Leviticus", "\n  Acts: 28,\n  Romans: 16,\n  '1 Corinthians': 16,\n  '2 Corinthians': 13,\n  Galatians: 6", " 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15", "Titles = [\n  'Genesis',\n  'Exodus',\n  'Leviticus',\n  'Numbers',\n  'Deuteronomy',\n  'Joshua',\n  'Jud", ",\n  Psalms,\n  Proverbs,\n  Ecclesiastes,\n  'Song of Solomon',\n  Isaiah,\n  Jeremiah,\n  Lamentations,\n  E", " 10,\n  Mark: 16,\n  Luke: 24,\n  John: 21,\n  Acts: 28,\n  Romans: 16,\n  '1", "\n//   'Lamentations',\n//   'Ezekiel',\n//   'Daniel',\n//   'Hosea',\n//   'Joel',\n//   'Amos',\n//   'Obad", "\n * @param {number} chapter\n * @returns {number}\n */\nexport function getChapterFromSlug(chapter: number, book: BookTitle): number {\n  if (isNaN(Number(chapter))) {", "<\n  '2 Thessalonians'\n  | '1 Thessalonians'\n  | 'Titus'\n  | 'Philemon'\n  | 'Hebrews'\n  |", "\n  '<',\n  '>',\n  '&',\n  '\\'',\n  '\"',\n  '/',\n  '\\\\',\n];\n\nexport const isSlugValid = (slug: string): boolean =>", "\n    \" 'Love not the world, neither the things that are in the world. If any man love the world, the love of the Father is not in him.' \"\n  </>,\n  <>\n    \" \"\n   ", "\nexport type Slug = string;\n\nexport type Params = {\n  book: BookTitle;\n  chapter: number;\n};\n\nexport type Source = {\n  slug: Slug;\n  pathname", "\n\nexport interface V2BookInfo {\n  book_number: number;\n  book_name: string;\n  book_name_translation: string;\n  chapter_count: number;\n  verse_count:", "13,\n  25,\n  17,\n  19,\n  19,\n  21,\n  25,\n  22,\n  23,\n  26,\n  ", "';\nimport { Book } from './Book';\n\nexport interface BookParam {\n  chapter: number | string;\n  book: string | BookTitle;\n}\n\nexport const getBookChapterFromSlug = (param", "criptures.net/english/hebrew/hebrew-bible.html\nexport const getBibleVerse = (\n  bookTitle: BookTitle,\n  chapter: number,\n  verse: number,"], "sampling_params": "{'greedy': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.2': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.2, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.8-top_p_0.95': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.8, top_p=0.95, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True)}"}