{"content": [" '1 Samuel',\n  '2 Samuel',\n  '1 Kings',\n  '2 Kings',\n  '1 Chronicles',\n  '2 Chronicles',\n  Ezra,\n  Nehemiah,\n  Est", "\n  '2 Kings',\n  '1 Chronicles',\n  '2 Chronicles',\n  Ezra,\n  Nehemiah,\n  Esther,\n  Job,\n  Psalms,\n  Prover", " 'Genesis',\n  'Exodus',\n  'Leviticus',\n  'Numbers',\n  'Deuteronomy',\n  'Joshua',\n  'Judges',\n  'Ruth", " '2 Samuel': 24,\n  '1 Kings': 22,\n  '2 Kings': 25,\n  '1 Chronicles': 29,\n  '2 Chronicles': 36,", " '2 Kings': 25,\n  '1 Chronicles': 29,\n  '2 Chronicles': 36,\n  Ezra: 10,\n  Nehemiah: 13,\n", "',\n  '1 Corinthians',\n  '2 Corinthians',\n  Galatians,\n  Ephesians,\n  Philippians,\n  Colossians,\n  '1 Thessaloni", " 36,\n  '1 Kings': 22,\n  '2 Kings': 25,\n  '1 Chronicles': 29,\n  '2 Chronicles': 36,\n  Ezra", "',\n  'Haggai',\n  'Zechariah',\n  'Malachi',\n  'Matthew',\n  'Mark',\n  'Luke',\n  'John',\n  'Acts',", " 8,\n  Micah: 7,\n  Nahum: 3,\n  Habakkuk: 3,\n  Zephaniah: 3,\n  Haggai: 2,\n", " 11,\n  Exodus: 50,\n  Leviticus: 27,\n  Numbers: 36,\n  Deuteronomy: 35,\n  Joshua: 2", "\n  let id: number;\n  let title: string;\n  let chapters: number;\n}\n\nexport type = {\n  id: number;\n  title: string;\n  chapters: number;", "_KINGS: 22,\n  KINGS_2: 25,\n  FIRST_CHRONICLES: 29,\n  SECOND_CHRONICLES: ", " {\n  Genesis: {\n    '1':\n      'In the beginning, God created the heavens and the earth. The earth was without form and empty. Darkness was on the face of the deep. God said, \u201c", "\nexport const getVerseText = async (book: string, chapter: number, verse: number) => {\n  const bookInfo = await getBookInfo(book);\n  if (!bookInfo) {\n    throw new Error", " ${chapter}`);\n  }\n  return Number(verse);\n};\n\nexport const getBookNumberFromSlug = (book: string): number => {\n  if (!booksToChaptersMap[book]) {\n", "\n    },\n    {\n      title: 'Ruth',\n      abbr: 'Rt',\n      id: 54,\n      chapters: 4,\n    },\n    {\n      title: '", "es 2:23',\n  '2 Samuel 12:25',\n  '1 Kings 22:52',\n  '2 Kings 14:25',\n  '1 Chronicles ", "      </h2>\n    );\n  } else if (title === 'Song of Solomon') {\n    return (\n      <h2 className=\"text-center\">\n        Song of <br /> Solomon\n     ", "(5123).map((x) => ({\n  id: x,\n  title: 'Ecclesiastes',\n  chapters: 12,\n})),\n];\n\nexport const getBookFrom", " 0.10777,\n  2.10777,\n  2.60777,\n  4.20777,\n  6.30777,\n"], "sampling_params": "{'greedy': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.2': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.2, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.8-top_p_0.95': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.8, top_p=0.95, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True)}"}