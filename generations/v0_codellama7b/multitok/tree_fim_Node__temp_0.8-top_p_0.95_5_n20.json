{"content": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n    <MID>\n        <MID>\n            <MID>\n                <MID>\n                    <MID>\n                        <MID>\n                            <MID>\n                                <M", "\n\t<ROOT>\n\t\t<MID>\n\t\t\t<CHILDREN>\n\t\t\t\t<MID>\n\t\t\t\t\t<CHILDREN>\n\t\t\t\t\t\t", "\n<TYPE>\n< Node_", "\n\t<CHILDREN>\n\t\t<MID>{\n\t\t\t<CHILDREN>\n\t\t\t\t<MID>{\n\t\t\t\t\t<CHILDREN>\n\t\t\t", "\n<PARENT>\n  <CHILD>\n    <CHILD2>\n    </CHILD2>\n  </CHILD>\n  <CHILD>\n    <CHILD2>", "\n<A>\n<B>\n<D>\n<C>\n<E>\n<F>\n<G>\n</G>\n</F>\n</E>\n</C>\n</B>\n</", " \n<LEFT>\n<RIGHT>\n<TREE>\n<TREE>\n<TREE>\n<TREE>\n<TREE>\n<TREE>\n<TREE>\n<TREE>", "\n\t{\n\t\tname: 'mid',\n\t\tdata: {},\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tname: 'a',\n\t\t\t\tdata: {},\n\t\t\t", "\n<PID>\n    <HID>\n        <PID>\n            <HID>\n                <PID>\n                    <HID>\n                        <PID>\n                            <HID>", "\n    <HEAD>\n        <MID>\n            <D>\n            </D>\n        </MID>\n        <MID>\n        </MID>\n    </HEAD>\n</MID>\n<M", "\n\t<LEFT>[\n\t\t<ROOT>\n\t\t\t<LEFT>\n\t\t\t\t<LEFT>\n\t\t\t\t\t<ROOT>\n\t\t\t\t\t\t<LEFT>\n\t\t\t\t", "\n\t<ID1>\n\t\t<ID3>\n\t\t<ID4>\n\t<ID2>\n\t\t<ID5>\n\t\t<ID6>\n<MID>\n */\n\n\n", "a{\n\t<UP>b{\n\t\t<UP>d\n\t}\n\tc{\n\t\t<UP>e{\n\t\t\t<UP>f\n\t\t}\n\t}\n}\n\n", "\n\n<MID>\n<ID>\n\t\t\t<MID>\n\t\t\t\t<ID>\n\t\t\t\t\t<MID>\n\t\t\t\t\t\t<ID>\n\t\t\t", "\n\n<d>\n\n<a>\n\t<b>\n\t\t<d>\n\t\t<d>\n\t\t<b>\n\t\t\t<d>\n\t\t\t\t<d>\n\t", " a {\n\t<BID> b{\n\t\td\n\t}\n\t<CID> c{\n\t\te\n\t}\n}\n\n\n<Node_Type", "\n\t|<MID>{\n\t\t<TARGET_NODE>\n\t\t\t|\n\t\t\t\t<MID>\n\t\t\t\t\t|\n\t\t\t\t\t\t<MID>", "\n\nMID = {\n\ttype: <TYPE>,\n\tdata: {\n\t\t<DATA>\n\t}\n\tchildren: <MID[]>\n}\n<MID> = {\n\tdata: <DATA", "\n<LID>\n<FID>\n<TID>\n\n<TOP>\n<START>\n<END>\n<MIDDLE>\n<MID_START>\n<MID_END>"], "sampling_params": "{'greedy': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.2': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.2, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.8-top_p_0.95': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.8, top_p=0.95, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True)}"}