{"content": ["Promise<any>", "Promise<any>", "Promise<void>", "Promise<void>", "Promise<void>", "Promise<boolean>", "Promise<any> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Fetch balances from", "Promise<BaseConnection>", "Promise<any> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Initialize exchange by fetching", "Promise<any> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Get balances for all", "Promise<void> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Close exchange connection\n    ", "Promise<void> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Check if the exchange is", "Promise<BaseConnection> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Set credentials for connection", "Promise<boolean> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Close connection and clean up", "Promise<any> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Get USD value of", "Promise<any> {\n        return Promise.reject(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Initialize exchange", "Promise<void> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Test whether connection can be", "Promise<any> {\n        throw Error(\n            `NotImplementedError: ${this.name}.initialize() has not been implemented.`\n        );\n    }\n\n    /**\n     * Login to exchange using the", "Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.initializeBaseConnection()\n                .then(connection => {\n                    this.connection = connection;\n                    this.initialized", "Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            this.initializeBase().then(\n                (result: any) => {\n                    this.initialized = true;\n                    this"], "sampling_params": "{'greedy': SamplingParams(n=1, best_of=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.2': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.2, top_p=1.0, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True), 'temp_0.8-top_p_0.95': SamplingParams(n=20, best_of=20, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.8, top_p=0.95, top_k=-1, min_p=0.0, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=[], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=50, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True)}"}