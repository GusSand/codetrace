{"hexsha": "d136cbb659cd7f40984bcec5a5dcf88567bffb4d", "size": 2583, "ext": "ts", "lang": "TypeScript", "max_stars_repo_path": "app/src/tracker/structure.ts", "max_stars_repo_name": "luke10x/bible-tracker", "max_stars_repo_head_hexsha": "ab27a01068a524e21fdcceccb17c447896cc4fbe", "max_stars_repo_licenses": ["MIT"], "max_stars_count": null, "max_stars_repo_stars_event_min_datetime": null, "max_stars_repo_stars_event_max_datetime": null, "max_issues_repo_path": "app/src/tracker/structure.ts", "max_issues_repo_name": "luke10x/bible-tracker", "max_issues_repo_head_hexsha": "ab27a01068a524e21fdcceccb17c447896cc4fbe", "max_issues_repo_licenses": ["MIT"], "max_issues_count": 2.0, "max_issues_repo_issues_event_min_datetime": "2022-01-14T16:49:47.000Z", "max_issues_repo_issues_event_max_datetime": "2022-01-14T16:52:36.000Z", "max_forks_repo_path": "app/src/tracker/structure.ts", "max_forks_repo_name": "luke10x/bible-tracker", "max_forks_repo_head_hexsha": "ab27a01068a524e21fdcceccb17c447896cc4fbe", "max_forks_repo_licenses": ["MIT"], "max_forks_count": null, "max_forks_repo_forks_event_min_datetime": null, "max_forks_repo_forks_event_max_datetime": null, "content": "export type BookTitle = string;\n\nconst booksToChaptersMap: { [name: string]: number } = {\n  Genesis: 50,\n  Exodus: 40,\n  Leviticus: 27,\n  Numbers: 36,\n  Deuteronomy: 34,\n  Joshua: 24,\n  Judges: 21,\n  Ruth: 4,\n  '1 Samuel': 31,\n  '2 Samuel': 24,\n  '1 Kings': 22,\n  '2 Kings': 25,\n  '1 Chronicles': 29,\n  '2 Chronicles': 36,\n  Ezra: 10,\n  Nehemiah: 13,\n  Esther: 10,\n  Job: 42,\n  Psalms: 150,\n  Proverbs: 31,\n  Ecclesiastes: 12,\n  'Song of Solomon': 8,\n  Isaiah: 66,\n  Jeremiah: 52,\n  Lamentations: 5,\n  Ezekial: 48,\n  Daniel: 12,\n  Hosea: 14,\n  Joel: 3,\n  Amos: 9,\n  Obadiah: 1,\n  Jonah: 4,\n  Micah: 7,\n  Nahum: 3,\n  Habakkuk: 3,\n  Zephaniah: 3,\n  Haggai: 2,\n  Zechariah: 14,\n  Malachi: 4,\n  Matthew: 28,\n  Mark: 16,\n  Luke: 24,\n  John: 21,\n  Acts: 28,\n  Romans: 16,\n  '1 Corinthians': 16,\n  '2 Corinthians': 13,\n  Galatians: 6,\n  Ephesians: 6,\n  Philippians: 4,\n  Colossians: 4,\n  '1 Thessalonians': 5,\n  '2 Thessalonians': 3,\n  '1 Timothy': 6,\n  '2 Timothy': 4,\n  Titus: 3,\n  Philemon: 1,\n  Hebrews: 13,\n  James: 5,\n  '1 Peter': 5,\n  '2 Peter': 3,\n  '1 John': 5,\n  '2 John': 1,\n  '3 John': 1,\n  Jude: 1,\n  Revelation: 22,\n};\n\nconst possibleTitles: string[] = Array.from(Object.keys(booksToChaptersMap));\n\nlet i = 0;\nexport const hebrewScriptures: BookInfo[] = possibleTitles\n  .slice(0, 39)\n  .map((x) => {\n    i++;\n    return { id: i, title: x, chapters: booksToChaptersMap[x] };\n  });\n\nexport const newTestament: BookInfo[] = possibleTitles.slice(39).map((x) => {\n  i++;\n  return { id: i, title: x, chapters: booksToChaptersMap[x] };\n});\n\nexport const getBookTitleFromSlug = (\n  bookTitle: BookTitle | unknown,\n): BookTitle => {\n  if (typeof bookTitle !== 'string') {\n    throw new Error(`Booktitle ${bookTitle} is not even string`);\n  }\n\n  const found = possibleTitles.find(\n    (x) => bookTitle === x.replace(' ', '-').toLowerCase(),\n  );\n\n  if (found === undefined) {\n    throw new Error('There is not such book title:${bookParam}');\n  }\n\n  return found;\n};\n\nexport const getChapterFromSlug = (\n  chapter: number | unknown,\n  book: BookTitle,\n): number => {\n  if (isNaN(Number(chapter))) {\n    throw new Error(`Chapter \"${chapter}\" is not a number`);\n  }\n  if (!Number.isInteger(Number(chapter))) {\n    throw new Error(`Chapter \"${chapter}\" is not integer`);\n  }\n  if (Number(chapter) > booksToChaptersMap[book]) {\n    throw new Error(`Chapter \"${chapter}\" is too hight`);\n  }\n  if (Number(chapter) < 1) {\n    throw new Error(`Chapter \"${chapter}\" is too low`);\n  }\n  return Number(chapter);\n};\n\nexport interface BookInfo {\n  id: number;\n  title: string;\n  chapters: number;\n}\n", "avg_line_length": 20.023255814, "max_line_length": 77, "alphanum_fraction": 0.6097560976, "annotation_sites": 19, "type_definitions": 2, "loc": 112, "functions": 5, "loc_per_function": 5.6, "estimated_tokens": 1044}