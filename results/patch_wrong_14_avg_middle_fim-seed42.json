{
    "28": {
        "old": "_uniq_1) => _uniq_0,\n  _uniq_11: _uniq_0\n): _uniq_0 {\n  switch (_uniq_9.kind) {\n    case \"Ctor4\": {\n      return _uniq",
        "new": "<fim_middle>_uniq_10",
        "gold": "_uniq_1",
        "prompt": "declare var require: any;\nconst assert = require(\"node:assert\");\ntype _uniq_0 = { kind: \"Ctor3\" } | { kind: \"Ctor4\"; f0: _uniq_0 };\ntype _uniq_1 = { kind: \"Ctor5\" } | { kind: \"Ctor6\"; f0: _uniq_0; f1: _uniq_1 };\ntype _uniq_2 =\n  | { kind: \"Ctor7\" }\n  | { kind: \"Ctor8\"; f0: _uniq_2; f1: _uniq_0; f2: _uniq_2 };\n\nfunction _uniq_9(_uniq_11: <FILL>): (_uniq_12: _uniq_1) => _uniq_1 {\n  return function (_uniq_12: _uniq_1) {\n    switch (_uniq_11.kind) {\n      case \"Ctor5\": {\n        return _uniq_12;\n      }\n      case \"Ctor6\": {\n        let _uniq_14 = _uniq_11.f1;\n        let _uniq_13 = _uniq_11.f0;\n        return { kind: \"Ctor6\", f0: _uniq_13, f1: _uniq_9(_uniq_14)(_uniq_12) };\n      }\n    }\n  };\n}\n\nfunction _uniq_10(_uniq_15: _uniq_2): _uniq_1 {\n  switch (_uniq_15.kind) {\n    case \"Ctor7\": {\n      return { kind: \"Ctor5\" };\n    }\n    case \"Ctor8\": {\n      let _uniq_18 = _uniq_15.f2;\n      let _uniq_17 = _uniq_15.f1;\n      let _uniq_16 = _uniq_15.f0;\n      let _uniq_19: _uniq_1 = _uniq_10(_uniq_16);\n      let _uniq_20: _uniq_1 = _uniq_10(_uniq_18);\n      let _uniq_21: _uniq_1 = _uniq_9(_uniq_19)(_uniq_20);\n      return _uniq_9(_uniq_21)({\n        kind: \"Ctor6\",\n        f0: _uniq_17,\n        f1: { kind: \"Ctor5\" },\n      });\n    }\n  }\n}\n\nfunction assertions() {\n  assert.deepEqual(_uniq_10({ kind: \"Ctor7\" }), { kind: \"Ctor5\" });\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: { kind: \"Ctor7\" },\n      f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f2: { kind: \"Ctor7\" },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f1: { kind: \"Ctor5\" },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: { kind: \"Ctor7\" },\n      f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f2: { kind: \"Ctor7\" },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: { kind: \"Ctor5\" },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: { kind: \"Ctor7\" },\n      },\n      f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f2: { kind: \"Ctor7\" },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f1: { kind: \"Ctor5\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: { kind: \"Ctor7\" },\n      f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f2: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f2: { kind: \"Ctor7\" },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f1: { kind: \"Ctor5\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: { kind: \"Ctor7\" },\n      },\n      f1: { kind: \"Ctor3\" },\n      f2: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f2: { kind: \"Ctor7\" },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f1: { kind: \"Ctor6\", f0: { kind: \"Ctor3\" }, f1: { kind: \"Ctor5\" } },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f2: { kind: \"Ctor7\" },\n      },\n      f1: { kind: \"Ctor3\" },\n      f2: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: { kind: \"Ctor7\" },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f1: { kind: \"Ctor6\", f0: { kind: \"Ctor3\" }, f1: { kind: \"Ctor5\" } },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f2: { kind: \"Ctor7\" },\n        },\n        f1: { kind: \"Ctor3\" },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n      f1: { kind: \"Ctor3\" },\n      f2: { kind: \"Ctor7\" },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f1: {\n          kind: \"Ctor6\",\n          f0: { kind: \"Ctor3\" },\n          f1: { kind: \"Ctor6\", f0: { kind: \"Ctor3\" }, f1: { kind: \"Ctor5\" } },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: { kind: \"Ctor7\" },\n      f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f2: {\n        kind: \"Ctor8\",\n        f0: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f2: { kind: \"Ctor7\" },\n        },\n        f1: { kind: \"Ctor3\" },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f1: {\n          kind: \"Ctor6\",\n          f0: { kind: \"Ctor3\" },\n          f1: {\n            kind: \"Ctor6\",\n            f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n            f1: { kind: \"Ctor5\" },\n          },\n        },\n      },\n    }\n  );\n}\nassertions();\n\nfunction validations() {\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor3\" },\n          f2: { kind: \"Ctor7\" },\n        },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n      f1: {\n        kind: \"Ctor4\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      },\n      f2: {\n        kind: \"Ctor8\",\n        f0: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: {\n            kind: \"Ctor4\",\n            f0: {\n              kind: \"Ctor4\",\n              f0: {\n                kind: \"Ctor4\",\n                f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n              },\n            },\n          },\n          f2: { kind: \"Ctor7\" },\n        },\n        f1: {\n          kind: \"Ctor4\",\n          f0: {\n            kind: \"Ctor4\",\n            f0: {\n              kind: \"Ctor4\",\n              f0: {\n                kind: \"Ctor4\",\n                f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n              },\n            },\n          },\n        },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: {\n            kind: \"Ctor4\",\n            f0: {\n              kind: \"Ctor4\",\n              f0: {\n                kind: \"Ctor4\",\n                f0: {\n                  kind: \"Ctor4\",\n                  f0: {\n                    kind: \"Ctor4\",\n                    f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n                  },\n                },\n              },\n            },\n          },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor3\" },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n        f1: {\n          kind: \"Ctor6\",\n          f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n          f1: {\n            kind: \"Ctor6\",\n            f0: {\n              kind: \"Ctor4\",\n              f0: {\n                kind: \"Ctor4\",\n                f0: {\n                  kind: \"Ctor4\",\n                  f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n                },\n              },\n            },\n            f1: {\n              kind: \"Ctor6\",\n              f0: {\n                kind: \"Ctor4\",\n                f0: {\n                  kind: \"Ctor4\",\n                  f0: {\n                    kind: \"Ctor4\",\n                    f0: {\n                      kind: \"Ctor4\",\n                      f0: {\n                        kind: \"Ctor4\",\n                        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n                      },\n                    },\n                  },\n                },\n              },\n              f1: {\n                kind: \"Ctor6\",\n                f0: {\n                  kind: \"Ctor4\",\n                  f0: {\n                    kind: \"Ctor4\",\n                    f0: {\n                      kind: \"Ctor4\",\n                      f0: {\n                        kind: \"Ctor4\",\n                        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n                      },\n                    },\n                  },\n                },\n                f1: {\n                  kind: \"Ctor6\",\n                  f0: {\n                    kind: \"Ctor4\",\n                    f0: {\n                      kind: \"Ctor4\",\n                      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n                    },\n                  },\n                  f1: { kind: \"Ctor5\" },\n                },\n              },\n            },\n          },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: { kind: \"Ctor7\" },\n      f1: { kind: \"Ctor3\" },\n      f2: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f1: { kind: \"Ctor6\", f0: { kind: \"Ctor3\" }, f1: { kind: \"Ctor5\" } },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_10({\n      kind: \"Ctor8\",\n      f0: {\n        kind: \"Ctor8\",\n        f0: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n          f2: { kind: \"Ctor7\" },\n        },\n        f1: { kind: \"Ctor3\" },\n        f2: { kind: \"Ctor7\" },\n      },\n      f1: { kind: \"Ctor3\" },\n      f2: {\n        kind: \"Ctor8\",\n        f0: { kind: \"Ctor7\" },\n        f1: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n        f2: {\n          kind: \"Ctor8\",\n          f0: { kind: \"Ctor7\" },\n          f1: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f2: { kind: \"Ctor7\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor6\",\n      f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n      f1: {\n        kind: \"Ctor6\",\n        f0: { kind: \"Ctor3\" },\n        f1: {\n          kind: \"Ctor6\",\n          f0: { kind: \"Ctor4\", f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } } },\n          f1: {\n            kind: \"Ctor6\",\n            f0: { kind: \"Ctor4\", f0: { kind: \"Ctor3\" } },\n            f1: { kind: \"Ctor6\", f0: { kind: \"Ctor3\" }, f1: { kind: \"Ctor5\" } },\n          },\n        },\n      },\n    }\n  );\n}\nvalidations();\n"
    },
    "6": {
        "old": "nat) => nat) {\n    switch (l.kind) {\n      case \"Nil\": {\n        return { kind: \"Nil\" };\n      }\n      case \"Cons\": {\n        let xs = l.f1;\n        let x =",
        "new": "<fim_middle>nlist<|endoftext|><fim_prefix><fim_suffix>",
        "gold": "nlist",
        "prompt": "declare var require: any;\nconst assert = require(\"node:assert\");\ntype nat = { kind: \"Z\" } | { kind: \"S\"; f0: nat };\ntype nlist = { kind: \"Nil\" } | { kind: \"Cons\"; f0: nat; f1: nlist };\n\nfunction list_append(l1: <FILL>): (l2: nlist) => nlist {\n  return function (l2: nlist) {\n    switch (l1.kind) {\n      case \"Nil\": {\n        return l2;\n      }\n      case \"Cons\": {\n        let xs = l1.f1;\n        let x = l1.f0;\n        return { kind: \"Cons\", f0: x, f1: list_append(xs)(l2) };\n      }\n    }\n  };\n}\n\nfunction assertions() {\n  assert.deepEqual(list_append({ kind: \"Nil\" })({ kind: \"Nil\" }), {\n    kind: \"Nil\",\n  });\n  assert.deepEqual(\n    list_append({\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    })({ kind: \"Nil\" }),\n    {\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    }\n  );\n  assert.deepEqual(\n    list_append({ kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } })({\n      kind: \"Cons\",\n      f0: { kind: \"Z\" },\n      f1: { kind: \"Nil\" },\n    }),\n    {\n      kind: \"Cons\",\n      f0: { kind: \"Z\" },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    }\n  );\n  assert.deepEqual(\n    list_append({\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    })({ kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } }),\n    {\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: {\n        kind: \"Cons\",\n        f0: { kind: \"Z\" },\n        f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n      },\n    }\n  );\n}\nassertions();\n\nfunction validations() {\n  assert.deepEqual(\n    list_append({ kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } })({\n      kind: \"Nil\",\n    }),\n    { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } }\n  );\n  assert.deepEqual(\n    list_append({\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: { kind: \"Nil\" },\n    })({\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: { kind: \"Nil\" },\n    }),\n    {\n      kind: \"Cons\",\n      f0: { kind: \"S\", f0: { kind: \"Z\" } },\n      f1: {\n        kind: \"Cons\",\n        f0: { kind: \"S\", f0: { kind: \"Z\" } },\n        f1: { kind: \"Nil\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    list_append({\n      kind: \"Cons\",\n      f0: { kind: \"Z\" },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    })({ kind: \"Nil\" }),\n    {\n      kind: \"Cons\",\n      f0: { kind: \"Z\" },\n      f1: { kind: \"Cons\", f0: { kind: \"Z\" }, f1: { kind: \"Nil\" } },\n    }\n  );\n}\nvalidations();\n"
    },
    "70": {
        "old": "_uniq_0): _uniq_1 {\n  switch (_uniq_23.kind) {\n    case \"Ctor4\": {\n      return { kind: \"Ctor6\" };\n    }\n    case \"Ctor5\": {\n      let _",
        "new": "<fim_middle>_uniq_1<|endoftext|>",
        "gold": "_uniq_1",
        "prompt": "declare var require: any;\nconst assert = require(\"node:assert\");\ntype _uniq_0 = { kind: \"Ctor2\" } | { kind: \"Ctor3\"; f0: _uniq_0 };\ntype _uniq_1 = { kind: \"Ctor4\" } | { kind: \"Ctor5\"; f0: _uniq_0; f1: _uniq_1 };\n\nfunction _uniq_6(_uniq_7: <FILL>, _uniq_8: _uniq_1): _uniq_1 {\n  switch (_uniq_7.kind) {\n    case \"Ctor4\": {\n      return _uniq_8;\n    }\n    case \"Ctor5\": {\n      let _uniq_10 = _uniq_7.f1;\n      let _uniq_9 = _uniq_7.f0;\n      return { kind: \"Ctor5\", f0: _uniq_9, f1: _uniq_6(_uniq_10, _uniq_8) };\n    }\n  }\n}\n\nfunction assertions() {\n  assert.deepEqual(_uniq_6({ kind: \"Ctor4\" }, { kind: \"Ctor4\" }), {\n    kind: \"Ctor4\",\n  });\n  assert.deepEqual(\n    _uniq_6(\n      {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      },\n      { kind: \"Ctor4\" }\n    ),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }\n  );\n  assert.deepEqual(\n    _uniq_6(\n      { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } }\n    ),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }\n  );\n  assert.deepEqual(\n    _uniq_6(\n      {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      },\n      { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } }\n    ),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor2\" },\n        f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      },\n    }\n  );\n}\nassertions();\n\nfunction validations() {\n  assert.deepEqual(\n    _uniq_6(\n      { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      { kind: \"Ctor4\" }\n    ),\n    { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } }\n  );\n  assert.deepEqual(\n    _uniq_6(\n      {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      },\n      {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      }\n    ),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_6(\n      {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor2\" },\n        f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      },\n      { kind: \"Ctor4\" }\n    ),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }\n  );\n}\nvalidations();\n"
    },
    "62": {
        "old": "_uniq_1): _uniq_2 {\n  switch (_uniq_35.kind) {\n    case \"Ctor6\": {\n      return { kind: \"Ctor8\" };\n    }\n    case \"Ctor7\": {\n      let _",
        "new": "<fim_middle>_uniq_6({",
        "gold": "_uniq_1",
        "prompt": "declare var require: any;\nconst assert = require(\"node:assert\");\ntype _uniq_0 = { kind: \"Ctor2\" } | { kind: \"Ctor3\"; f0: _uniq_0 };\ntype _uniq_1 = { kind: \"Ctor4\" } | { kind: \"Ctor5\"; f0: _uniq_0; f1: _uniq_1 };\n\nfunction _uniq_6(\n  _uniq_9: _uniq_1\n): (\n  _uniq_10: (__x8: _uniq_1) => (__x9: _uniq_0) => _uniq_1\n) => (_uniq_11: _uniq_1) => _uniq_1 {\n  return function (_uniq_10: (__x6: _uniq_1) => (__x7: _uniq_0) => _uniq_1) {\n    return function (_uniq_11: _uniq_1) {\n      switch (_uniq_9.kind) {\n        case \"Ctor4\": {\n          return _uniq_11;\n        }\n        case \"Ctor5\": {\n          let _uniq_13 = _uniq_9.f1;\n          let _uniq_12 = _uniq_9.f0;\n          return _uniq_6(_uniq_13)(_uniq_10)(_uniq_10(_uniq_11)(_uniq_12));\n        }\n      }\n    };\n  };\n}\nfunction _uniq_7(_uniq_14: <FILL>): (_uniq_15: _uniq_0) => _uniq_1 {\n  return function (_uniq_15: _uniq_0) {\n    switch (_uniq_14.kind) {\n      case \"Ctor4\": {\n        return { kind: \"Ctor5\", f0: _uniq_15, f1: { kind: \"Ctor4\" } };\n      }\n      case \"Ctor5\": {\n        let _uniq_17 = _uniq_14.f1;\n        let _uniq_16 = _uniq_14.f0;\n        return { kind: \"Ctor5\", f0: _uniq_16, f1: _uniq_7(_uniq_17)(_uniq_15) };\n      }\n    }\n  };\n}\n\nfunction _uniq_8(_uniq_18: _uniq_1): _uniq_1 {\n  return _uniq_6(_uniq_18)(function (_uniq_19: _uniq_1) {\n    return function (_uniq_20: _uniq_0) {\n      return { kind: \"Ctor5\", f0: _uniq_20, f1: _uniq_19 };\n    };\n  })({ kind: \"Ctor4\" });\n}\n\nfunction assertions() {\n  assert.deepEqual(_uniq_8({ kind: \"Ctor4\" }), { kind: \"Ctor4\" });\n  assert.deepEqual(\n    _uniq_8({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }\n  );\n}\nassertions();\n\nfunction validations() {\n  assert.deepEqual(\n    _uniq_8({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_8({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          f1: { kind: \"Ctor4\" },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_8({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor2\" },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n          f1: {\n            kind: \"Ctor5\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n            f1: { kind: \"Ctor4\" },\n          },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor2\" },\n          f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_8({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor4\" },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor4\" },\n    }\n  );\n}\nvalidations();\n"
    },
    "57": {
        "old": "_uniq_1): _uniq_2 {\n  switch (_uniq_14.kind) {\n    case \"Ctor5\": {\n      return { kind: \"Ctor5\" };\n    }\n    case \"Ctor6\": {\n      return {",
        "new": "<fim_middle>_uniq_7({",
        "gold": "_uniq_1",
        "prompt": "declare var require: any;\nconst assert = require(\"node:assert\");\ntype _uniq_0 = { kind: \"Ctor2\" } | { kind: \"Ctor3\"; f0: _uniq_0 };\ntype _uniq_1 = { kind: \"Ctor4\" } | { kind: \"Ctor5\"; f0: _uniq_0; f1: _uniq_1 };\n\nfunction _uniq_6(\n  _uniq_8: _uniq_1\n): (_uniq_9: (__x4: _uniq_0) => _uniq_0) => _uniq_1 {\n  return function (_uniq_9: (__x3: _uniq_0) => _uniq_0) {\n    switch (_uniq_8.kind) {\n      case \"Ctor4\": {\n        return { kind: \"Ctor4\" };\n      }\n      case \"Ctor5\": {\n        let _uniq_11 = _uniq_8.f1;\n        let _uniq_10 = _uniq_8.f0;\n        return {\n          kind: \"Ctor5\",\n          f0: _uniq_9(_uniq_10),\n          f1: _uniq_6(_uniq_11)(_uniq_9),\n        };\n      }\n    }\n  };\n}\n\nfunction _uniq_7(_uniq_12: <FILL>): _uniq_1 {\n  return _uniq_6(_uniq_12)(function (_uniq_13: _uniq_0) {\n    return { kind: \"Ctor3\", f0: _uniq_13 };\n  });\n}\n\nfunction assertions() {\n  assert.deepEqual(_uniq_7({ kind: \"Ctor4\" }), { kind: \"Ctor4\" });\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: { kind: \"Ctor4\" },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      f1: { kind: \"Ctor4\" },\n    }\n  );\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        f1: { kind: \"Ctor4\" },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        },\n        f1: { kind: \"Ctor4\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: { kind: \"Ctor5\", f0: { kind: \"Ctor2\" }, f1: { kind: \"Ctor4\" } },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: { kind: \"Ctor4\" },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: {\n        kind: \"Ctor3\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      },\n      f1: {\n        kind: \"Ctor5\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          },\n        },\n        f1: {\n          kind: \"Ctor5\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: {\n                  kind: \"Ctor3\",\n                  f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n                },\n              },\n            },\n          },\n          f1: { kind: \"Ctor4\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: {\n        kind: \"Ctor3\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        },\n      },\n      f1: {\n        kind: \"Ctor5\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n              },\n            },\n          },\n        },\n        f1: {\n          kind: \"Ctor5\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: {\n                  kind: \"Ctor3\",\n                  f0: {\n                    kind: \"Ctor3\",\n                    f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n                  },\n                },\n              },\n            },\n          },\n          f1: { kind: \"Ctor4\" },\n        },\n      },\n    }\n  );\n}\nassertions();\n\nfunction validations() {\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: {\n        kind: \"Ctor3\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        },\n      },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          },\n          f1: { kind: \"Ctor4\" },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: {\n        kind: \"Ctor3\",\n        f0: {\n          kind: \"Ctor3\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          },\n        },\n      },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n              },\n            },\n          },\n          f1: { kind: \"Ctor4\" },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n          f1: {\n            kind: \"Ctor5\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n            f1: { kind: \"Ctor4\" },\n          },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          f1: {\n            kind: \"Ctor5\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n            f1: { kind: \"Ctor4\" },\n          },\n        },\n      },\n    }\n  );\n  assert.deepEqual(\n    _uniq_7({\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor2\" },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          f1: {\n            kind: \"Ctor5\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n              },\n            },\n            f1: { kind: \"Ctor4\" },\n          },\n        },\n      },\n    }),\n    {\n      kind: \"Ctor5\",\n      f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n      f1: {\n        kind: \"Ctor5\",\n        f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n        f1: {\n          kind: \"Ctor5\",\n          f0: {\n            kind: \"Ctor3\",\n            f0: { kind: \"Ctor3\", f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } } },\n          },\n          f1: {\n            kind: \"Ctor5\",\n            f0: {\n              kind: \"Ctor3\",\n              f0: {\n                kind: \"Ctor3\",\n                f0: {\n                  kind: \"Ctor3\",\n                  f0: { kind: \"Ctor3\", f0: { kind: \"Ctor2\" } },\n                },\n              },\n            },\n            f1: { kind: \"Ctor4\" },\n          },\n        },\n      },\n    }\n  );\n}\nvalidations();\n"
    }
}