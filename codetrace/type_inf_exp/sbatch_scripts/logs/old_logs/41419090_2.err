/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/diffusers/utils/outputs.py:63: UserWarning: torch.utils._pytree._register_pytree_node is deprecated. Please use torch.utils._pytree.register_pytree_node instead.
  torch.utils._pytree._register_pytree_node(
/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/tree_sitter/__init__.py:36: FutureWarning: Language.build_library is deprecated. Use the new bindings instead.
  warn("{} is deprecated. Use {} instead.".format(old, new), FutureWarning)
/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/tree_sitter/__init__.py:36: FutureWarning: Language(path, name) is deprecated. Use Language(ptr, name) instead.
  warn("{} is deprecated. Use {} instead.".format(old, new), FutureWarning)
Batch:   0%|          | 0/334 [00:00<?, ?it/s]huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Batch:   0%|          | 1/334 [00:15<1:24:42, 15.26s/it]Batch:   1%|          | 2/334 [00:26<1:11:43, 12.96s/it]Batch:   1%|          | 3/334 [00:37<1:05:23, 11.85s/it]Batch:   1%|          | 4/334 [00:48<1:04:03, 11.65s/it]Batch:   1%|▏         | 5/334 [01:04<1:13:05, 13.33s/it]Batch:   2%|▏         | 6/334 [01:18<1:13:08, 13.38s/it]Batch:   2%|▏         | 7/334 [01:28<1:06:41, 12.24s/it]Batch:   2%|▏         | 8/334 [01:39<1:04:46, 11.92s/it]Batch:   3%|▎         | 9/334 [01:51<1:04:17, 11.87s/it]Batch:   3%|▎         | 10/334 [02:03<1:04:08, 11.88s/it]Batch:   3%|▎         | 11/334 [02:13<1:01:58, 11.51s/it]Batch:   4%|▎         | 12/334 [02:22<57:26, 10.70s/it]  Batch:   4%|▍         | 13/334 [02:31<53:44, 10.04s/it]Batch:   4%|▍         | 14/334 [02:44<58:14, 10.92s/it]Batch:   4%|▍         | 15/334 [02:57<1:02:19, 11.72s/it]Batch:   5%|▍         | 16/334 [03:05<55:16, 10.43s/it]  Batch:   5%|▌         | 17/334 [03:11<48:17,  9.14s/it]Batch:   5%|▌         | 17/334 [03:12<59:50, 11.33s/it]
Traceback (most recent call last):
  File "/work/arjunguha-research-group/franlucc/projects/codetrace/codetrace/type_inf_exp/scripts/steer.py", line 112, in <module>
    make_steering_tensor(args)
  File "/work/arjunguha-research-group/franlucc/projects/codetrace/codetrace/type_inf_exp/scripts/steer.py", line 81, in make_steering_tensor
    diff_tensor = get_steering_tensor(model, correct, incorrect, args)
  File "/work/arjunguha-research-group/franlucc/projects/codetrace/codetrace/type_inf_exp/steering.py", line 214, in get_steering_tensor
    correct_avg_tensor = batched_get_averages(model, 
  File "/work/arjunguha-research-group/franlucc/projects/codetrace/codetrace/type_inf_exp/request_patch.py", line 39, in batched_get_averages
    hs = collect_hidden_states_at_tokens(model, batch, tokens)
  File "/work/arjunguha-research-group/franlucc/projects/codetrace/codetrace/interp_utils.py", line 157, in collect_hidden_states_at_tokens
    with model.forward() as runner:
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/nnsight/contexts/Runner.py", line 73, in __exit__
    self.run_local()
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/nnsight/contexts/Runner.py", line 78, in run_local
    self.output = self.model(
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/nnsight/models/NNsightModel.py", line 194, in __call__
    output = fn(inputs, *args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/nnsight/models/NNsightModel.py", line 398, in _forward
    return self.local_model(
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1561, in _call_impl
    result = forward_call(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py", line 1268, in forward
    transformer_outputs = self.transformer(
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py", line 1121, in forward
    outputs = block(
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1561, in _call_impl
    result = forward_call(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py", line 728, in forward
    attn_outputs = self.attn(
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py", line 637, in forward
    attn_output, attn_weights = self._attn(query, key, value, attention_mask, head_mask)
  File "/work/arjunguha-research-group/franlucc/venvs/v_codetrace/lib/python3.10/site-packages/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py", line 569, in _attn
    sdpa_result = torch.nn.functional.scaled_dot_product_attention(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 24.78 GiB. GPU 0 has a total capacity of 79.15 GiB of which 11.85 GiB is free. Including non-PyTorch memory, this process has 67.28 GiB memory in use. Of the allocated memory 40.51 GiB is allocated by PyTorch, and 26.29 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
